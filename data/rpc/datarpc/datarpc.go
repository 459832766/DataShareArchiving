// Code generated by goctl. DO NOT EDIT.
// Source: datarpc.proto

package datarpc

import (
	"context"

	"rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	DataItem       = pb.DataItem
	DeleteRequest  = pb.DeleteRequest
	DeleteResponse = pb.DeleteResponse
	QueryRequest   = pb.QueryRequest
	QueryResponse  = pb.QueryResponse

	Datarpc interface {
		DataFakeDelete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*DeleteResponse, error)
		ListDataByPath(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*QueryResponse, error)
	}

	defaultDatarpc struct {
		cli zrpc.Client
	}
)

func NewDatarpc(cli zrpc.Client) Datarpc {
	return &defaultDatarpc{
		cli: cli,
	}
}

func (m *defaultDatarpc) DataFakeDelete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*DeleteResponse, error) {
	client := pb.NewDatarpcClient(m.cli.Conn())
	return client.DataFakeDelete(ctx, in, opts...)
}

func (m *defaultDatarpc) ListDataByPath(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*QueryResponse, error) {
	client := pb.NewDatarpcClient(m.cli.Conn())
	return client.ListDataByPath(ctx, in, opts...)
}
